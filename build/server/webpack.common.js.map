{"version":3,"sources":["../../lunchyapp/server/webpack.common.js"],"names":["path","require","CleanWebpackPlugin","HtmlWebpackPlugin","entry","join","__dirname","plugins","title","EnvironmentPlugin","output","publicPath","filename","module","rules","test","loader","query","presets","compact","resolve","extensions","modules","node","fs","net","tls"],"mappings":";;;;;;AAAA;;;;;;AACA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,qBAAqBD,QAAQ,sBAAR,CAA3B;AACA,IAAME,oBAAoBF,QAAQ,qBAAR,CAA1B;;kBAEe;AACXG,WAAO,CACHJ,KAAKK,IAAL,CAAUC,SAAV,EAAqB,2BAArB,CADG,CADI;;AAKXC,aAAS,CACL,IAAIL,kBAAJ,CAAuB,CAAC,MAAD,CAAvB,CADK,EAEL,IAAIC,iBAAJ,CAAsB;AAClBK,eAAO;AADW,KAAtB,CAFK,EAKL,IAAI,kBAAQC,iBAAZ,CAA8B,CAAC,UAAD,CAA9B,CALK,CALE;;AAaXC,YAAQ;AACJV,cAAMA,KAAKK,IAAL,CAAUC,SAAV,EAAqB,qBAArB,CADF;AAEJK,oBAAY,GAFR;AAGJC,kBAAU;AAHN,KAbG;;AAmBXC,YAAQ;AACJC,eAAO,CACH;AACIC,kBAAM,QADV;AAEIC,oBAAQ,cAFZ;AAGIC,mBAAO;AACHC,yBAAS,CAAC,KAAD,EAAQ,OAAR,CADN;AAEHC,yBAAS;AAFN;AAHX,SADG,EASH;AACIJ,kBAAK,QADT;AAEIC,oBAAQ;AAFZ,SATG;AADH,KAnBG;;AAoCXI,aAAS;AACL;AACAC,oBAAY,CAAC,KAAD,EAAQ,MAAR,EAAe,MAAf,CAFP;AAGLC,iBAAS,CAAC,cAAD;AAHJ,KApCE;;AA0CXC,UAAM;AACFC,YAAI,OADF;AAEFC,aAAK,OAFH;AAGFC,aAAK;AAHH;AA1CK,C","file":"webpack.common.js","sourcesContent":["import webpack from 'webpack'\nconst path = require('path');\nconst CleanWebpackPlugin = require('clean-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n\nexport default {\n    entry: [\n        path.join(__dirname, '../../client/src/index.js')\n    ],\n\n    plugins: [\n        new CleanWebpackPlugin(['dist']),\n        new HtmlWebpackPlugin({\n            title: 'Production'\n        }),\n        new webpack.EnvironmentPlugin(['NODE_ENV'])\n    ],\n\n    output: {\n        path: path.join(__dirname, '../../client/public'),\n        publicPath: '/',\n        filename: 'bundle.js'\n    },\n\n    module: {\n        rules: [\n            {\n                test: /.jsx?$/,\n                loader: 'babel-loader',\n                query: {\n                    presets: ['env', 'react'],\n                    compact: false\n                }\n            },\n            {\n                test:/\\.css$/,\n                loader: \"style-loader!css-loader\"\n            }\n        ],\n    },\n\n    resolve: {\n        //extensions that should be used to resolve modules\n        extensions: ['.js', '.jsx','.css'],\n        modules: ['node_modules']\n    },\n\n    node: {\n        fs: 'empty',\n        net: 'empty',\n        tls: 'empty',\n    }\n};\n"]}